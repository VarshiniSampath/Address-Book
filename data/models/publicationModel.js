import mongoose from 'mongoose';

const PublicationSchema = new mongoose.Schema({
  // _id: automatically generated by MongoDB
  doi: String,
  author: String,
  title: String,
  year: Number,
  citationCount: Number
});

let Publications = mongoose.model('Publication', PublicationSchema, 'papers');
exports.PublicationModel = Publications;

exports.getPublication = () => {
  console.log('Getting one publication');
  return new Promise((resolve, reject) => {
    Publications.findOne({}, (err, record) => {
      err ? reject(err) : resolve(record);
    });
  });
};

exports.getPublications = () => {
  console.log('Getting all publications');
  return new Promise((resolve, reject) => {
    Publications.find({}, (err, records) => {
      err ? reject(err) : resolve(records);
    });
  });
};

exports.getPublicationByDOI = (doi) => {
  console.log('Getting publication By ID');
  return new Promise((resolve, reject) => {
    Publications.findOne({doi: doi})
  });
};

exports.addNewPublication = (newPublication) => {
  console.log('Adding new publication to database');
  let newPub = new Publications({
    doi: newPublication.doi,
    author: newPublication.author,
    title: newPublication.title,
    year: newPublication.year,
    citationCount: newPublication.citationCount
  });
  return new Promise((resolve, reject) => {
    newPublication.save((err, record) => {
      err ? reject(err) : resolve(record);
    });
  });
};
